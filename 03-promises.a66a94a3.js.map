{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAE+B,MAAzBC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cACd,yDAEFE,KAAMH,SAASC,cACb,yDAEFG,OAAQJ,SAASC,cACf,yDAEFI,UAAWL,SAASC,cAAc,WAGpC,SAASK,EAAcC,EAAUL,GAC/B,OAAO,IAAIM,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEF,E,MAAUL,IAEpBQ,EAAO,C,SAAEH,E,MAAUL,MAEpBA,MAsBP,SAASY,GAASP,SAAEA,EAAQL,MAAEA,IAC5BN,EAAAmB,OAAOC,QAAQ,uBAAqBT,QAAiBL,OAEvD,SAASe,GAAQV,SAAEA,EAAQL,MAAEA,IAC3BN,EAAAmB,OAAOG,QAAQ,sBAAoBX,QAAeL,OAGpDJ,EAAKC,KAAKoB,iBAAiB,UAzB3B,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,EAAaC,OAAOzB,EAAKI,MAAMsB,OAC/BC,EAAYF,OAAOzB,EAAKK,KAAKqB,OAC7BjB,EAAWgB,OAAOzB,EAAKM,OAAOoB,OACpC,IAAIE,EAAe,EAEnB,IAAK,IAAIC,EAAI,EAAGA,GAAKpB,EAAUoB,GAAK,EACxB,IAANA,EACFD,EAAeJ,EACNK,GAAK,IACdD,GAAgBD,GAElBG,QAAQC,IAAIH,GACZpB,EAAcC,EAAUmB,GAAcI,KAAKhB,GAAUiB,MAAMd","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// Отримуємо достоуп до елементу форми\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector(\n    'body > form > label:nth-child(1) > input[type=number]'\n  ),\n  step: document.querySelector(\n    'body > form > label:nth-child(2) > input[type=number]'\n  ),\n  amount: document.querySelector(\n    'body > form > label:nth-child(3) > input[type=number]'\n  ),\n  submitBtn: document.querySelector('button'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const firstDelay = Number(refs.delay.value);\n  const stepDelay = Number(refs.step.value);\n  const position = Number(refs.amount.value);\n  let promiseDelay = 0;\n\n  for (let i = 1; i <= position; i += 1) {\n    if (i === 1) {\n      promiseDelay = firstDelay;\n    } else if (i >= 2) {\n      promiseDelay += stepDelay;\n    }\n    console.log(promiseDelay);\n    createPromise(position, promiseDelay).then(onSucces).catch(onError);\n  }\n}\n\nfunction onSucces({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","submitBtn","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$onSucces","Notify","success","$47d4ff9957288465$var$onError","failure","addEventListener","e","preventDefault","firstDelay","Number","value","stepDelay","promiseDelay","i","console","log","then","catch"],"version":3,"file":"03-promises.a66a94a3.js.map"}